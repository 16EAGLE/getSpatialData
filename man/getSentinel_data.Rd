% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getSentinel_data.R
\name{getSentinel_data}
\alias{getSentinel_data}
\title{Download Sentinel-1, -2 and -3 data}
\usage{
getSentinel_data(records, dir_out = NULL, force = FALSE, username = NULL,
  password = NULL, hub = "auto", verbose = TRUE)
}
\arguments{
\item{records}{data.frame, one or multiple records (each represented by one row), as it is returned by \link{getSentinel_query}.}

\item{dir_out}{character, full path to download target directory. Optional. If not set, \code{getSentinel_data} uses the directory to the \code{getSpatialData} archive folder. Use \link{set_archive} to once define a getSpatialData  archive folder.}

\item{force}{logical. If \code{TRUE}, download is forced even if file already exisits in the download directory. Default is \code{FALSE}.}

\item{username}{character, a valid user name to the ESA Copernicus Open Access Hub. If \code{NULL} (default), the session-wide login credentials are used (see \link{login_CopHub} for details on registration).}

\item{password}{character, the password to the specified user account. If \code{NULL} (default) and no seesion-wide password is defined, it is asked interactively ((see \link{login_CopHub} for details on registration).}

\item{hub}{character, either "auto" to access the Copernicus Open Access Hubs by \code{platform} input, "operational" to look for ESA's operational products from the Open Hub,  "pre-ops" to look for pre-operational products from the Pre-Ops Hub (e.g. currently all Sentinel-3 products), or an valid API URL. Default is "auto".}

\item{verbose}{logical, if \code{TRUE}, details on the function's progress will be visibile on the console. Default is TRUE.}
}
\value{
Character vector of paths to the downloaded files.
}
\description{
\code{getSentinel_data} downloads Sentinel data from the Copernicus Open Access Hubs for Sentinel. The datasets are identified by the query return of \link{getSentinel_query}.
}
\examples{
## Load packages
library(getSpatialData)
library(sf)
library(sp)

## Define an AOI (either matrix, sf or sp object)
data("aoi_data") # example aoi

aoi <- aoi_data[[3]] # AOI as matrix object, or better:
aoi <- aoi_data[[2]] # AOI as sp object, or:
aoi <- aoi_data[[1]] # AOI as sf object
# or, simply call set_aoi() without argument to interactively draw an AOI

## set AOI for this session
set_aoi(aoi)
view_aoi() #view AOI in viewer

## Define time range and platform
time_range <-  c("2017-08-01", "2017-08-30")
platform <- "Sentinel-2"

## set login credentials and an archive directory
\dontrun{
login_CopHub(username = "username") #asks for password or define 'password'
set_archive("/path/to/archive/")

## Use getSentinel_query to search for data (using the session AOI)
records <- getSentinel_query(time_range = time_range, platform = platform)

## Get an overview of the records
View(records) #get an overview about the search records
colnames(records) #see all available filter attributes
unique(records$processinglevel) #use one of the, e.g. to see available processing levels

## Filter the records
records_filtered <- records[which(records$processinglevel == "Level-1C"),] #filter by Level

## Preview a single record
getSentinel_preview(record = records_filtered[5,])

## Download some datasets
files <- getSentinel_data(records = records_filtered[c(4,5,6),])
}

}
\seealso{
\link{getSentinel_query}
}
\author{
Jakob Schwalb-Willmann
}
