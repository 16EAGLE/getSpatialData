% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getSentinel_data.R
\name{getSentinel_data}
\alias{getSentinel_data}
\title{Download Sentinel-1, Sentinel-2, Sentinel-3, Sentinel-5P or Sentinel GNSS data}
\usage{
getSentinel_data(records, dir_out = NULL, ..., verbose = TRUE)
}
\arguments{
\item{records}{data.frame, one or multiple records (each represented by one row), as it is returned by \link{getSentinel_records}.}

\item{dir_out}{character, full path to download target directory. Optional. If not set, \code{getSentinel_data} uses the directory to the \code{getSpatialData} archive folder. Use \link{set_archive} to once define a getSpatialData archive folder.}

\item{...}{additional, sensor-specific arguments:
\itemize{
   \item \code{gnss}, logical, whether to query for Sentinel GNSS RINEX records instead of remote sensing instrument records. If \code{TRUE}, only records of the dual-frequency GPS recievers mounted on Sentinel-1, -2, and -3 are returned and \code{aoi} settings are ignored. If \code{FALSE} (default), remote sensing instrument records, queried including \code{aoi} settings, are returned (see section \code{Sentinel}).
   \item \code{hub}, character, Copernicus Hub selection for Sentinel queries. Either
\itemize{
   \item "auto" (default) to automatically select a suitable Copernicus hub depending on the selected products
   \item "dhus" to look for operational Open Hub records only,
   \item "s3" to look for Sentinel-3 pre-operational records only,
   \item "s5p" to look for Sentinel-5P precursor pre-operational records only,
   \item "GNSS" to look for GNSS RINEX records only,
   \item or a valid API URL.
}
}}

\item{verbose}{logical, whether to display details on the function's progress or output on the console.}

\item{force}{logical. If \code{TRUE}, download is forced even if file already exisits in the download directory. Default is \code{FALSE}.}

\item{n.retry}{numeric, maximum number of download (re-)attempts. If downloads of datasets fail (e.g. MD5 checksums do not match), these downloads will be reattampted.}

\item{username}{to be removed.}

\item{password}{to be removed.}
}
\value{
Character vector of paths to the downloaded files.
}
\description{
\code{getSentinel_data} downloads Sentinel data from the Copernicus Open Access Hubs. The datasets are identified per records as returned by \link{getSentinel_records}.
}
\examples{
## Load packages
library(getSpatialData)
library(raster)
library(sf)
library(sp)

## Define an AOI (either matrix, sf or sp object)
data("aoi_data") # example aoi

aoi <- aoi_data[[3]] # AOI as matrix object, or better:
aoi <- aoi_data[[2]] # AOI as sp object, or:
aoi <- aoi_data[[1]] # AOI as sf object
# or, simply call set_aoi() without argument to interactively draw an AOI

## set AOI for this session
set_aoi(aoi)
view_aoi() #view AOI in viewer

## Define time range and platform
time_range <-  c("2017-08-01", "2017-08-30")
platform <- "Sentinel-2"

## set login credentials and an archive directory
\dontrun{
login_CopHub(username = "username") #asks for password or define 'password'
set_archive("/path/to/archive/")

## Use getSentinel_records to search for data (using the session AOI)
records <- getSentinel_records(time_range = time_range, platform = platform)

## Get an overview of the records
View(records) #get an overview about the search records
colnames(records) #see all available filter attributes
unique(records$processinglevel) #use one of the, e.g. to see available processing levels

## Filter the records
records_filtered <- records[which(records$processinglevel == "Level-1C"),] #filter by Level

## Preview a single record
getSentinel_preview(record = records_filtered[5,])

## Download some datasets
datasets <- getSentinel_data(records = records_filtered[c(4,5,6),])

## Make them ready to use
datasets_prep <- prepSentinel(datasets, format = "tiff")

## Load them to R
r <- stack(datasets_prep[[1]][[1]][1]) #first dataset, first tile, 10m resoultion
}

}
\seealso{
\link{getSentinel_records}
}
\author{
Jakob Schwalb-Willmann
}
