% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getSentinel_query.R
\name{getSentinel_query}
\alias{getSentinel_query}
\title{Query Sentinel-1, -2 and -3 data from the Copernicus Open Access Hubs}
\usage{
getSentinel_query(ext, time_range, platform, hub_user = NULL,
  hub_pass = NULL, hub_access = "auto")
}
\arguments{
\item{ext}{extent object, representing the requested area of interest.}

\item{time_range}{character, containing two elements: the query's starting date and stopping date, formatted "YYYYMMDD", e.g. "20170515"}

\item{platform}{character, identifies the platform. Either "Sentinel-1", "Sentinel-2" or "Sentinel-3".}

\item{hub_user}{character, a valid user name to the Copernicus Open Access Hub. Default is NULL. Leave it undefined, if you want to use use \link{set_cophub_login} to define the login credentials once for all \code{getSentinel*} functions during the session. Register on \url{https://scihub.copernicus.eu/}. Not needed for connections to the pre-operational hub.}

\item{hub_pass}{character, the password to the specified user account. If \code{NULL}, the password will be taken from \link{set_cophub_login} inputs or, if \code{set_cophub_login} is not in use, asked interactively. Not needed for connections to the pre-operational hub.}

\item{hub_access}{character, either "auto" to access the Copernicus Open Access Hubs by \code{platform} input, "operational" to look for ESA's operational products from the Open Hub,  "pre-ops" to look for pre-operational products from the Pre-Ops Hub (e.g. currently all Sentinel-3 products), or an valid API URL. Default is "auto".}
}
\value{
A data frame; each row represents one dataset, recognized by an individual UUID. The data frame can be further filtered by its columnwise attributes. The UUIDs of the selected datasets can be handed over to the other getSentinel functions for downloading.
}
\description{
\code{getSentinel_query} queries the Copernicus Open Access Hubs for Sentinel data by some basic input search parameters. The function returns a data frame that can be further filtered.
}
\details{
The \code{getSentinel*} function bundle makes use of the python library \code{sentinelsat}, serving as interface to the SciHub API. Python needs to be installed on your system.
}
\examples{
## Load packages
library(getSpatialData)
library(raster)

## Define an extent, a time range and a platform
ext <- extent(10.29048,11.75558,45.93350,46.94617)
time_range <-  c("20170801", "20170830")
platform <- "Sentinel-2"

## Prior to calling getSentinel* functions,
## define your Copernicus Open Access Hub credentials :
\dontrun{
set_cophub_login(hub_user = "16eagle") #asks for password, if 'hub_pass' is not defined

## Use getSentinel_query to search for data
products <- getSentinel_query(ext = ext, time_range = time_range, platform = platform)

## Get an overview of the products
View(products) #get an overview about the search products
colnames(products) #see all available filter attributes
unique(products$processinglevel) #use one of the, e.g. to see available processing levels

## Filter the products
products_filtered <- products[which(products$processinglevel == "Level-1C"),] #filter by Level

## Preview a single product
getSentinel_preview(product = products_filtered[10,])

## Download datasets
#dir_out <- "your/output/directory"
dir_out <- tempdir() #for this example, we use a temporary directory
files <- getSentinel_data(products = products_filtered, dir_out = dir_out)
}
}
\seealso{
\link{getSentinel_data}
}
\author{
Jakob Schwalb-Willmann
}
