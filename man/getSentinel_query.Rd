% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getSentinel_query.R
\name{getSentinel_query}
\alias{getSentinel_query}
\title{Query Sentinel-1, -2 and -3 data from the Copernicus Open Access Hubs}
\usage{
getSentinel_query(ext, time_range, platform, hub_user, hub_pass = NULL,
  hub_access = "operational", py_path = NULL)
}
\arguments{
\item{ext}{extent object, representing the requested area of interest.}

\item{time_range}{character, containing two elements: the query's starting date and stopping date, formatted "YYYYMMDD", e.g. "20170515"}

\item{platform}{character, identifies the platform. Either "Sentinel-1", "Sentinel-2" or "Sentinel-3".}

\item{hub_user}{character, a valid user name to the Copernicus Open Access Hub. Register on \url{https://scihub.copernicus.eu/}.}

\item{hub_pass}{character, the password to the specified user account. If \code{NULL}, the password will be asked interactively (default).}

\item{hub_access}{character, either "operational" to look for ESA's operational products from the Open Hub,  "pre-ops" to look for pre-operational products from the Pre-Ops Hub (currently all Sentinel-3 products), or an URL to a Hub. Default is "operational".}

\item{py_path}{character, define path to the python command manually. If \code{NULL}, python is searched for automatically (default). To be used, of multiple versions of Python are installed (e.g. Anaconda).}
}
\value{
A data frame; each row represents one dataset, recognized by an individual UUID. The data frame can be further filtered by its columnwise attributes. The UUIDs of the selected datasets can be handed over to the other getSentinel functions for downloading.
}
\description{
\code{getSentinel_query} queries the Copernicus Open Access Hubs for Sentinel data by some basic input search parameters. The function returns a data frame that can be further filtered.
}
\details{
The \code{getSentinel*} function bundle makes use of the python library \code{sentinelsat}, serving as interface to the SciHub API. Python needs to be installed on your system.
}
\examples{
## Load packages
library(getSpatialData)
library(raster)

## Define an extent, a time range and a platform
ext <- extent(10.29048,11.75558,45.93350,46.94617)
time_range <-  c("20170801", "20170803")
platform <- "Sentinel-2"

## Define your Hub credentials
hub_user <- "your_username"

## Use getSentinel_query to search for data
\dontrun{
products <- getSentinel_query(ext = ext, time_range = time_range, platform = platform,
                              hub_user = hub_user)
#if you do not want to retype your password for every call, use the 'hub_pass' argument

## Get an overview of the products
View(products) #get an overview about the search products
colnames(products) #see all available filter attributes
unique(products$processinglevel) #use one of the, e.g. to see available processing levels

## Preview a single product
getSentinel_preview(product = products[1,], hub_user = hub_user)

## Filter the products
products_filtered <- products[which(products$processinglevel == "Level-1C"),] #filter by Level

## Download datasets
#dir_out <- "your/output/directory"
dir_out <- tempdir() #or some temporary directory for this example
files <- getSentinel_data(products = products_filtered, dir_out = dir_out,
                          hub_user = hub_user)
}
}
\seealso{
\link{getSentinel_data}
}
\author{
Jakob Schwalb-Willmann
}
