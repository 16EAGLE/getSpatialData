% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getSentinel_query.R
\name{getSentinel_query}
\alias{getSentinel_query}
\title{Query Sentinel-1, -2 and -3 data from the Copernicus Open Access Hubs}
\usage{
getSentinel_query(aoi, time_range, platform, hub_user = NULL,
  hub_pass = NULL, hub_access = "auto")
}
\arguments{
\item{aoi}{matrix representing area of interest. Needs to have two columns (representing longitude an latitude) and at least three rows, each representing a corner point of the AOI. The last row needs to be equal to the first row, closing the polygon.}

\item{time_range}{character, containing two elements: the query's starting date and stopping date, formatted "YYYY-MM-DD", e.g. "2017-05-15"}

\item{platform}{character, identifies the platform. Either "Sentinel-1", "Sentinel-2" or "Sentinel-3".}

\item{hub_user}{character, a valid user name to the Copernicus Open Access Hub. Default is NULL. Leave it undefined, if you want to use use \link{set_login_CopHub} to define the login credentials once for all \code{getSentinel*} functions during the session. Register on \url{https://scihub.copernicus.eu/}. Not needed for connections to the pre-operational hub.}

\item{hub_pass}{character, the password to the specified user account. If \code{NULL}, the password will be taken from \link{set_login_CopHub} inputs or, if \code{set_login_CopHub} is not in use, asked interactively. Not needed for connections to the pre-operational hub.}

\item{hub_access}{character, either "auto" to access the Copernicus Open Access Hubs by \code{platform} input, "operational" to look for ESA's operational products from the Open Hub,  "pre-ops" to look for pre-operational products from the Pre-Ops Hub (e.g. currently all Sentinel-3 products), or an valid API URL. Default is "auto".}
}
\value{
A data frame; each row represents one dataset, recognized by an individual UUID. The data frame can be further filtered by its columnwise attributes. The UUIDs of the selected datasets can be handed over to the other getSentinel functions for downloading.
}
\description{
\code{getSentinel_query} queries the Copernicus Open Access Hubs for Sentinel data by some basic input search parameters. The function returns a data frame that can be further filtered.
}
\examples{
## Load packages
library(getSpatialData)

## Define an AOI (last row needs to equal first row, closing the polygon)
aoi <- rbind(c(9.29168701, 49.93884750),
             c(9.36584472, 49.58400677),
             c(10.1458740, 49.44312875),
             c(10.6814575, 49.75642885),
             c(9.75860595, 50.20327530),
             c(9.29168701, 49.93884750)) # last row must equal first row

time_range <-  c("2017-08-01", "2017-08-30")
platform <- "Sentinel-2"

## set login credentials and archive directory
\dontrun{
set_login_CopHub(hub_user = "16eagle") #asks for your password, if argument 'hub_pass' is not defined
set_archive("/home/jakob/Dokumente/wd/tmp/gSD/")

## Use getSentinel_query to search for data
products <- getSentinel_query(aoi = aoi, time_range = time_range, platform = platform)

## Get an overview of the products
View(products) #get an overview about the search products
colnames(products) #see all available filter attributes
unique(products$processinglevel) #use one of the, e.g. to see available processing levels

## Filter the products
products_filtered <- products[which(products$processinglevel == "Level-1C"),] #filter by Level

## Preview a single product
getSentinel_preview(product = products_filtered[5,])

## Download some datasets to your archive directory
files <- getSentinel_data(products = products_filtered[c(4,5,6), ])
}
}
\seealso{
\link{getSentinel_data}
}
\author{
Jakob Schwalb-Willmann
}
